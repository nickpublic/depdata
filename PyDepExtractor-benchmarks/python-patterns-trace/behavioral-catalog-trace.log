 --- modulename: catalog, funcname: <module>
catalog.py(7): """
catalog.py(9): __author__ = "Ibrahim Diop <ibrahim@sikilabs.com>"
catalog.py(12): class Catalog(object):
 --- modulename: catalog, funcname: Catalog
catalog.py(12): class Catalog(object):
catalog.py(16):     """
catalog.py(18):     def __init__(self, param):
catalog.py(32):     @staticmethod
catalog.py(36):     @staticmethod
catalog.py(40):     def main_method(self):
catalog.py(49): class CatalogInstance(object):
 --- modulename: catalog, funcname: CatalogInstance
catalog.py(49): class CatalogInstance(object):
catalog.py(54):     """
catalog.py(56):     def __init__(self, param):
catalog.py(65):     def _instance_method_1(self):
catalog.py(68):     def _instance_method_2(self):
catalog.py(71):     _instance_method_choices = {'param_value_1': _instance_method_1,
catalog.py(72):                                 'param_value_2': _instance_method_2}
catalog.py(74):     def main_method(self):
catalog.py(82): class CatalogClass(object):
 --- modulename: catalog, funcname: CatalogClass
catalog.py(82): class CatalogClass(object):
catalog.py(87):     """
catalog.py(89):     x1 = 'x1'
catalog.py(90):     x2 = 'x2'
catalog.py(92):     def __init__(self, param):
catalog.py(99):     @classmethod
catalog.py(103):     @classmethod
catalog.py(107):     _class_method_choices = {'param_value_1': _class_method_1,
catalog.py(108):                              'param_value_2': _class_method_2}
catalog.py(110):     def main_method(self):
catalog.py(118): class CatalogStatic(object):
 --- modulename: catalog, funcname: CatalogStatic
catalog.py(118): class CatalogStatic(object):
catalog.py(123):     """
catalog.py(125):     def __init__(self, param):
catalog.py(132):     @staticmethod
catalog.py(136):     @staticmethod
catalog.py(140):     _static_method_choices = {'param_value_1': _static_method_1,
catalog.py(141):                               'param_value_2': _static_method_2}
catalog.py(143):     def main_method(self):
catalog.py(151): def main():
catalog.py(171): if __name__ == "__main__":
catalog.py(173):     main()
 --- modulename: catalog, funcname: main
catalog.py(159):     test = Catalog('param_value_2')
 --- modulename: catalog, funcname: __init__
catalog.py(23):         self._static_method_choices = {'param_value_1': self._static_method_1,
catalog.py(24):                                        'param_value_2': self._static_method_2}
catalog.py(27):         if param in self._static_method_choices.keys():
catalog.py(28):             self.param = param
catalog.py(160):     test.main_method()
 --- modulename: catalog, funcname: main_method
catalog.py(45):         self._static_method_choices[self.param]()
 --- modulename: catalog, funcname: _static_method_2
catalog.py(38):         print("executed method 2!")
executed method 2!
catalog.py(162):     test = CatalogInstance('param_value_1')
 --- modulename: catalog, funcname: __init__
catalog.py(57):         self.x1 = 'x1'
catalog.py(58):         self.x2 = 'x2'
catalog.py(60):         if param in self._instance_method_choices:
catalog.py(61):             self.param = param
catalog.py(163):     test.main_method()
 --- modulename: catalog, funcname: main_method
catalog.py(79):         self._instance_method_choices[self.param].__get__(self)()
 --- modulename: catalog, funcname: _instance_method_1
catalog.py(66):         print("Value {}".format(self.x1))
Value x1
catalog.py(165):     test = CatalogClass('param_value_2')
 --- modulename: catalog, funcname: __init__
catalog.py(94):         if param in self._class_method_choices:
catalog.py(95):             self.param = param
catalog.py(166):     test.main_method()
 --- modulename: catalog, funcname: main_method
catalog.py(115):         self._class_method_choices[self.param].__get__(None, self.__class__)()
 --- modulename: catalog, funcname: _class_method_2
catalog.py(105):         print("Value {}".format(cls.x2))
Value x2
catalog.py(168):     test = CatalogStatic('param_value_1')
 --- modulename: catalog, funcname: __init__
catalog.py(127):         if param in self._static_method_choices:
catalog.py(128):             self.param = param
catalog.py(169):     test.main_method()
 --- modulename: catalog, funcname: main_method
catalog.py(148):         self._static_method_choices[self.param].__get__(None, self.__class__)()
 --- modulename: catalog, funcname: _static_method_1
catalog.py(134):         print("executed method 1!")
executed method 1!
