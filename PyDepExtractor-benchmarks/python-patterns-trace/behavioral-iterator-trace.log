 --- modulename: iterator, funcname: <module>
iterator.py(10): """
iterator.py(12): from __future__ import print_function
iterator.py(15): def count_to(count):
iterator.py(22): count_to_two = lambda: count_to(2)
iterator.py(23): count_to_five = lambda: count_to(5)
iterator.py(25): print('Counting to two...')
Counting to two...
iterator.py(26): for number in count_to_two():
 --- modulename: iterator, funcname: <lambda>
iterator.py(22): count_to_two = lambda: count_to(2)
 --- modulename: iterator, funcname: count_to
iterator.py(17):     numbers = ["one", "two", "three", "four", "five"]
iterator.py(18):     for number in numbers[:count]:
iterator.py(19):         yield number
iterator.py(27):     print(number, end=' ')
one iterator.py(26): for number in count_to_two():
 --- modulename: iterator, funcname: count_to
iterator.py(18):     for number in numbers[:count]:
iterator.py(19):         yield number
iterator.py(27):     print(number, end=' ')
two iterator.py(26): for number in count_to_two():
 --- modulename: iterator, funcname: count_to
iterator.py(18):     for number in numbers[:count]:
iterator.py(29): print()

iterator.py(31): print('Counting to five...')
Counting to five...
iterator.py(32): for number in count_to_five():
 --- modulename: iterator, funcname: <lambda>
iterator.py(23): count_to_five = lambda: count_to(5)
 --- modulename: iterator, funcname: count_to
iterator.py(17):     numbers = ["one", "two", "three", "four", "five"]
iterator.py(18):     for number in numbers[:count]:
iterator.py(19):         yield number
iterator.py(33):     print(number, end=' ')
one iterator.py(32): for number in count_to_five():
 --- modulename: iterator, funcname: count_to
iterator.py(18):     for number in numbers[:count]:
iterator.py(19):         yield number
iterator.py(33):     print(number, end=' ')
two iterator.py(32): for number in count_to_five():
 --- modulename: iterator, funcname: count_to
iterator.py(18):     for number in numbers[:count]:
iterator.py(19):         yield number
iterator.py(33):     print(number, end=' ')
three iterator.py(32): for number in count_to_five():
 --- modulename: iterator, funcname: count_to
iterator.py(18):     for number in numbers[:count]:
iterator.py(19):         yield number
iterator.py(33):     print(number, end=' ')
four iterator.py(32): for number in count_to_five():
 --- modulename: iterator, funcname: count_to
iterator.py(18):     for number in numbers[:count]:
iterator.py(19):         yield number
iterator.py(33):     print(number, end=' ')
five iterator.py(32): for number in count_to_five():
 --- modulename: iterator, funcname: count_to
iterator.py(18):     for number in numbers[:count]:
iterator.py(35): print()

