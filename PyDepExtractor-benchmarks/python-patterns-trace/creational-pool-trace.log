 --- modulename: pool, funcname: <module>
pool.py(32): """
pool.py(35): class ObjectPool(object):
 --- modulename: pool, funcname: ObjectPool
pool.py(35): class ObjectPool(object):
pool.py(37):     def __init__(self, queue, auto_get=False):
pool.py(41):     def __enter__(self):
pool.py(46):     def __exit__(self, Type, value, traceback):
pool.py(51):     def __del__(self):
pool.py(57): def main():
pool.py(82): if __name__ == '__main__':
pool.py(83):     main()
 --- modulename: pool, funcname: main
pool.py(58):     try:
pool.py(59):         import queue
pool.py(63):     def test_object(queue):
pool.py(67):     sample_queue = queue.Queue()
pool.py(69):     sample_queue.put('yam')
pool.py(70):     with ObjectPool(sample_queue) as obj:
 --- modulename: pool, funcname: __init__
pool.py(38):         self._queue = queue
pool.py(39):         self.item = self._queue.get() if auto_get else None
 --- modulename: pool, funcname: __enter__
pool.py(42):         if self.item is None:
pool.py(43):             self.item = self._queue.get()
pool.py(44):         return self.item
pool.py(71):         print('Inside with: {}'.format(obj))
Inside with: yam
 --- modulename: pool, funcname: __exit__
pool.py(47):         if self.item is not None:
pool.py(48):             self._queue.put(self.item)
pool.py(49):             self.item = None
 --- modulename: pool, funcname: __del__
pool.py(52):         if self.item is not None:
pool.py(72):     print('Outside with: {}'.format(sample_queue.get()))
Outside with: yam
pool.py(74):     sample_queue.put('sam')
pool.py(75):     test_object(sample_queue)
 --- modulename: pool, funcname: test_object
pool.py(64):         pool = ObjectPool(queue, True)
 --- modulename: pool, funcname: __init__
pool.py(38):         self._queue = queue
pool.py(39):         self.item = self._queue.get() if auto_get else None
pool.py(65):         print('Inside func: {}'.format(pool.item))
Inside func: sam
 --- modulename: pool, funcname: __del__
pool.py(52):         if self.item is not None:
pool.py(53):             self._queue.put(self.item)
pool.py(54):             self.item = None
pool.py(76):     print('Outside func: {}'.format(sample_queue.get()))
Outside func: sam
pool.py(78):     if not sample_queue.empty():
