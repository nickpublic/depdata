 --- modulename: builder, funcname: <module>
builder.py(35): """
builder.py(39): class Building(object):
 --- modulename: builder, funcname: Building
builder.py(39): class Building(object):
builder.py(41):     def __init__(self):
builder.py(45):     def build_floor(self):
builder.py(48):     def build_size(self):
builder.py(51):     def __repr__(self):
builder.py(56): class House(Building):
 --- modulename: builder, funcname: House
builder.py(56): class House(Building):
builder.py(58):     def build_floor(self):
builder.py(61):     def build_size(self):
builder.py(65): class Flat(Building):
 --- modulename: builder, funcname: Flat
builder.py(65): class Flat(Building):
builder.py(67):     def build_floor(self):
builder.py(70):     def build_size(self):
builder.py(80): class ComplexBuilding(object):
 --- modulename: builder, funcname: ComplexBuilding
builder.py(80): class ComplexBuilding(object):
builder.py(81):     def __repr__(self):
builder.py(85): class ComplexHouse(ComplexBuilding):
 --- modulename: builder, funcname: ComplexHouse
builder.py(85): class ComplexHouse(ComplexBuilding):
builder.py(86):     def build_floor(self):
builder.py(89):     def build_size(self):
builder.py(93): def construct_building(cls):
builder.py(101): if __name__ == "__main__":
builder.py(102):     house = House()
 --- modulename: builder, funcname: __init__
builder.py(42):         self.build_floor()
 --- modulename: builder, funcname: build_floor
builder.py(59):         self.floor = 'One'
builder.py(43):         self.build_size()
 --- modulename: builder, funcname: build_size
builder.py(62):         self.size = 'Big'
builder.py(103):     print(house)
 --- modulename: builder, funcname: __repr__
builder.py(52):         return 'Floor: {0.floor} | Size: {0.size}'.format(self)
Floor: One | Size: Big
builder.py(104):     flat = Flat()
 --- modulename: builder, funcname: __init__
builder.py(42):         self.build_floor()
 --- modulename: builder, funcname: build_floor
builder.py(68):         self.floor = 'More than One'
builder.py(43):         self.build_size()
 --- modulename: builder, funcname: build_size
builder.py(71):         self.size = 'Small'
builder.py(105):     print(flat)
 --- modulename: builder, funcname: __repr__
builder.py(52):         return 'Floor: {0.floor} | Size: {0.size}'.format(self)
Floor: More than One | Size: Small
builder.py(108):     complex_house = construct_building(ComplexHouse)
 --- modulename: builder, funcname: construct_building
builder.py(94):     building = cls()
builder.py(95):     building.build_floor()
 --- modulename: builder, funcname: build_floor
builder.py(87):         self.floor = 'One'
builder.py(96):     building.build_size()
 --- modulename: builder, funcname: build_size
builder.py(90):         self.size = 'Big and fancy'
builder.py(97):     return building
builder.py(109):     print(complex_house)
 --- modulename: builder, funcname: __repr__
builder.py(82):         return 'Floor: {0.floor} | Size: {0.size}'.format(self)
Floor: One | Size: Big and fancy
